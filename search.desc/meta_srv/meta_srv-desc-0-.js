searchState.loadedDescShard("meta_srv", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuilder for <code>MetaPeerClient</code>.\nError type for MetaPeerClientBuilder\nUninitialized field\nCustom validation error\nBuilds a new <code>MetaPeerClient</code>.\nCreate an empty builder, with all fields set to <code>None</code> or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nGets all candidates in the election.\nCampaign waits to acquire leadership in an election.\nReturns the argument unchanged.\nWhen a new leader is born, it may need some initialization …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if current node is the leader.\nReturns the leader value for the current election.\nRegisters a candidate for the election.\nReleases election leadership so other campaigners may …\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSNAFU context selector for the <code>Error::BatchGet</code> variant\nSNAFU context selector for the <code>Error::ConnectEtcd</code> variant\nSNAFU context selector for the <code>Error::ConvertProtoData</code> …\nSNAFU context selector for the <code>Error::CorruptedTableRoute</code> …\nSNAFU context selector for the <code>Error::CreateChannel</code> variant\nSNAFU context selector for the <code>Error::DatanodeTableNotFound</code>…\nSNAFU context selector for the <code>Error::DecodeTableRoute</code> …\nSNAFU context selector for the <code>Error::DeserializeFromJson</code> …\nSNAFU context selector for the <code>Error::EmptyKey</code> variant\nSNAFU context selector for the <code>Error::EmptyTableName</code> …\nContains the error value\nSNAFU context selector for the <code>Error::EtcdFailed</code> variant\nSNAFU context selector for the <code>Error::ExceededRetryLimit</code> …\nSNAFU context selector for the <code>Error::GetFullTableInfo</code> …\nSNAFU context selector for the <code>Error::InitDdlManager</code> …\nSNAFU context selector for the <code>Error::InitExportMetricsTask</code>…\nSNAFU context selector for the <code>Error::InitMetadata</code> variant\nSNAFU context selector for the <code>Error::InvalidArguments</code> …\nSNAFU context selector for the <code>Error::InvalidCatalogValue</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidFullTableName</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidHttpBody</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidLeaseKey</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidStatKey</code> …\nSNAFU context selector for the <code>Error::InvalidUtf8Value</code> …\nSNAFU context selector for the <code>Error::InvalidateTableCache</code> …\nSNAFU context selector for the <code>Error::IsNotLeader</code> variant\nSNAFU context selector for the <code>Error::Join</code> variant\nSNAFU context selector for the <code>Error::KvBackend</code> variant\nSNAFU context selector for the <code>Error::LeaseGrant</code> variant\nSNAFU context selector for the <code>Error::LeaseKeyFromUtf8</code> …\nSNAFU context selector for the <code>Error::LeaseValueFromUtf8</code> …\nSNAFU context selector for the <code>Error::ListCatalogs</code> variant\nSNAFU context selector for the <code>Error::ListSchemas</code> variant\nSNAFU context selector for the <code>Error::ListTables</code> variant\nSNAFU context selector for the <code>Error::LockNotConfig</code> variant\nSNAFU context selector for the <code>Error::Lock</code> variant\nSNAFU context selector for the <code>Error::MailboxClosed</code> variant\nSNAFU context selector for the <code>Error::MailboxReceiver</code> …\nSNAFU context selector for the <code>Error::MailboxTimeout</code> …\nSNAFU context selector for the <code>Error::MigrationAbort</code> …\nSNAFU context selector for the <code>Error::MigrationRunning</code> …\nSNAFU context selector for the <code>Error::MissingRequestHeader</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::MoveValue</code> variant\nSNAFU context selector for the <code>Error::NextSequence</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::NoLeader</code> variant\nSNAFU context selector for the <code>Error::NotSetWeightArray</code> …\nContains the success value\nSNAFU context selector for the <code>Error::OperateRegion</code> variant\nSNAFU context selector for the <code>Error::Other</code> variant\nSNAFU context selector for the <code>Error::ParseAddr</code> variant\nSNAFU context selector for the <code>Error::ParseBool</code> variant\nSNAFU context selector for the <code>Error::ParseDuration</code> variant\nSNAFU context selector for the <code>Error::ParseNum</code> variant\nSNAFU context selector for the <code>Error::PeerUnavailable</code> …\nSNAFU context selector for the <code>Error::ProcedureNotFound</code> …\nSNAFU context selector for the <code>Error::PublishMessage</code> …\nSNAFU context selector for the <code>Error::PushMessage</code> variant\nSNAFU context selector for the <code>Error::PusherNotFound</code> …\nSNAFU context selector for the <code>Error::QueryProcedure</code> …\nSNAFU context selector for the <code>Error::Range</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::RegionOpeningRace</code> …\nSNAFU context selector for the <code>Error::RegionRouteNotFound</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::RequestDatanode</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::RetryLater</code> variant\nSNAFU context selector for the <code>Error::RetryLaterWithSource</code> …\nSNAFU context selector for the <code>Error::SaveClusterInfo</code> …\nSNAFU context selector for the <code>Error::SchemaAlreadyExists</code> …\nSNAFU context selector for the <code>Error::SendShutdownSignal</code> …\nSNAFU context selector for the <code>Error::SerializeToJson</code> …\nSNAFU context selector for the <code>Error::ShutdownServer</code> …\nSNAFU context selector for the <code>Error::StartGrpc</code> variant\nSNAFU context selector for the <code>Error::StartHttp</code> variant\nSNAFU context selector for the <code>Error::StartProcedureManager</code>…\nSNAFU context selector for the <code>Error::StartTelemetryTask</code> …\nSNAFU context selector for the <code>Error::StatKeyFromUtf8</code> …\nSNAFU context selector for the <code>Error::StatValueFromUtf8</code> …\nSNAFU context selector for the <code>Error::StopProcedureManager</code> …\nSNAFU context selector for the <code>Error::SubmitDdlTask</code> variant\nSNAFU context selector for the <code>Error::SubmitProcedure</code> …\nSNAFU context selector for the <code>Error::TableAlreadyExists</code> …\nSNAFU context selector for the <code>Error::TableIdChanged</code> …\nSNAFU context selector for the <code>Error::TableInfoNotFound</code> …\nSNAFU context selector for the <code>Error::TableMetadataManager</code> …\nSNAFU context selector for the <code>Error::TableNotFound</code> variant\nSNAFU context selector for the <code>Error::TableRouteConversion</code> …\nSNAFU context selector for the <code>Error::TableRouteNotFound</code> …\nSNAFU context selector for the <code>Error::TcpBind</code> variant\nSNAFU context selector for the <code>Error::TcpIncoming</code> variant\nSNAFU context selector for the <code>Error::TooManyPartitions</code> …\nSNAFU context selector for the <code>Error::Txn</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::Unexpected</code> variant\nSNAFU context selector for the <code>Error::Unlock</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::Unsupported</code> variant\nSNAFU context selector for the <code>Error::UpdateTableMetadata</code> …\nSNAFU context selector for the <code>Error::UpdateTableRoute</code> …\nSNAFU context selector for the <code>Error::WaitProcedure</code> variant\nSNAFU context selector for the <code>Error::WeightArray</code> variant\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the error is retryable.\n<code>ToString::to_string</code>, but without panic on OOM.\nHolds the heartbeat statistics. It is capped by the number …\nThis is our port of Akka’s “PhiAccrualFailureDetector…\nDuration corresponding to number of potentially …\nBootstrap the stats with heartbeats that corresponds to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of samples to use for calculation of mean and …\nMinimum standard deviation to use for the normal …\nCalculation of phi, derived from the Cumulative …\nThe suspicion level of the accrual failure detector.\nA low threshold is prone to generate many wrong suspicions …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandleControl\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe handler to collect cluster info from the heartbeat …\nThe handler to collect cluster info from the heartbeat …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nKeeps [Datanode] leases\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nApproximate bytes of this region\nApproximate number of rows in this region\nThe engine name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe region_id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe read capacity units during this period\nThe read capacity units during this period\nHow many regions on this node\nReturns a tuple array containing RegionId and RegionRole.\nThe region role.\nThe write capacity units during this period\nThe write capacity units during this period\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the latest node addr.\nGet the latest number of regions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll keys used for distributed locking in the Metasrv. …\nA implementation of distributed lock based on etcd. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe address the server listens on.\nThe data home directory.\nThe datanode options.\nWhether to enable region failover.\nWhether to enable telemetry.\nThe metrics export options.\nThe failure detector options.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe HTTP server options.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe logging options.\nLookup a peer by peer_id, return it only when it’s alive.\nThe max operations per txn\nThe procedure options.\nThe type of selector.\nThe address the server advertises to the clients.\nThe address of the store, e.g., etcd.\nThe store key prefix. If it is not empty, all keys in the …\nWhether to use the memory store.\nThe WAL options.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nElapsed time to execution of heartbeat handlers.\nThe heartbeat connection gauge.\nInactive region gauge.\nMeta kv cache hit counter.\nMeta kv cache miss counter.\nElapsed time to responding kv requests.\nElapsed time to leader cache kv.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA “Node” in the state machine of region failover …\nThe “Context” of region failover procedure state …\nA key for the preventing running multiple failover …\nThe states transition of region failover procedure:\nThe state machine of region failover procedure. Driven by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSleep for <code>region_lease_expiry_seconds</code>, to make sure the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUpdates the metadata of the table.\nThe context of procedure execution.\nUsed to generate new Context.\nDefault implementation.\nIt’s shared in each step and available even after …\nPersistent data of RegionMigrationProcedure.\nPersistent data of RegionMigrationProcedure.\nIt’s shared in each step and available in executing …\nReturns as Any.\nThe table catalog.\nThe Id of the cluster.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe Peer of migration source.\n<code>datanode_table</code> is stored via previous steps for future use.\nReturns the <code>table_info</code> of VolatileContext if any. …\nReturns the <code>table_info</code> of VolatileContext if any. …\nReturns the <code>table_route</code> of VolatileContext if any. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBroadcasts the invalidate table cache message.\nThe last_entry_id of leader region.\nThe deadline of leader region lease.\nReturns an [ContextFactoryImpl].\nYields the next State and Status.\n<code>opening_region_guard</code> will be set after the …\nReturns the RegionId.\nThe RegionId of migration region.\nRemoves the <code>table_info</code> of VolatileContext, returns true if …\nRemoves the <code>table_route</code> of VolatileContext, returns true …\nThe timeout of waiting for a candidate to replay the WAL.\nResets the <code>leader_region_lease_deadline</code>.\nThe table schema.\nReturns address of meta server.\nSets the <code>leader_region_last_entry_id</code>.\nSets the <code>leader_region_lease_deadline</code> if it does not exist.\n<code>table_info</code> is stored via previous steps for future use.\n<code>table_route</code> is stored via previous steps for future use.\nThe Peer of migration destination.\nBuilds downgrade region instruction.\nTries to downgrade a leader region.\nDowngrades a leader region.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nManager of region migration procedure.\nThe guard of running RegionMigrationProcedureTask.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns true if the region has been migrated.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns new RegionMigrationManager\nSubmits a new region migration procedure.\nRegisters the loader of RegionMigrationProcedure to the …\n<code>ToString::to_string</code>, but without panic on OOM.\nThrows an error if <code>leader_peer</code> is not the <code>from_peer</code>.\nVerifies the type of region migration table route.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the RegionMigrationAbort with <code>reason</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe behaviors:\nChecks whether the candidate region on region has been …\nReturns the argument unchanged.\nChecks whether the region has been migrated. Returns true …\nCalls <code>U::from(self)</code>.\nReturns true if the region leader is not the <code>from_peer</code>.\nYields next State.\nRetrieves region route.\nBuilds open region instructions\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOpens the candidate region.\nDowngrades the leader region.\nRolls back the downgraded region.\nUpgrades the candidate region.\nReturns new Vec.\nReturns true if region metadata has been updated.\nDowngrades the leader region.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRollbacks the downgraded leader region if the candidate …\nUpgrades the candidate region.\nBuilds upgrade region instruction.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the timeout of the upgrade candidate region.\nTries to upgrade a candidate region.\nUpgrades a candidate region.\nAn mock implementation of region server that simply echoes …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe default implementation of Publish\nThis trait provides a <code>send_msg</code> method that can be used by …\nSubscribed topic type, determined by the ability of meta.\nThis trait defines how messages are delivered from meta to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSubscriber’s id, globally unique, assigned by leader …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubscriber’s name, passed in by subscriber.\nTransport channel from meta to subscriber.\nThe default implementation of Publish\nThis trait provides a <code>send_msg</code> method that can be used by …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis trait defines how messages are delivered from meta to …\nReturns the argument unchanged.\nSubscriber’s id, globally unique, assigned by leader …\nCalls <code>U::from(self)</code>.\nSubscriber’s name, passed in by subscriber.\nTransport channel from meta to subscriber.\nRenews lease of regions.\nThe result of region lease renewal, contains the renewed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns None if:\nRenews the lease of regions for specific datanode.\nWhether duplicates are allowed in the selected result, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMinimum number of selected results.\nAccording to the <code>opts</code>, choose peers from the <code>weight_array</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe [‘RegionNumsBasedWeightCompute’] calculates …\nThe <code>WeightCompute</code> trait is used to compute the weight …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA implementation of weighted balance: random weighted …\nA common trait for weighted balance algorithm.\nThe method will choose one item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe method will reverse choose one item.\nThe method will re-set weight array.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nA cache dedicated to a Leader node, in order to cache some …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe caller MUST ensure during the loading, there are no …\nWith a leader checker which always returns true when …\nState transition.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")