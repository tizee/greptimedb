searchState.loadedDescShard("common_function", 0, "Ensure current function is invokded under <code>greptime</code> catalog.\nfunctions registry\nScalar function trait, modified from databend to adapt …\nThe function execution context\nEvaluate the function, e.g. run/execute the function.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the name of the function, should be unique.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA trait for handling procedure service requests in …\nA trait for handling table mutations in <code>QueryEngine</code>.\nTrigger a compaction task for table.\nTrigger a compaction task for a table region.\nDelete rows from the table.\nTrigger a flush task for table.\nTrigger a flush task for a table region.\nInserts rows into the table.\nMigrate a region from source peer to target peer, returns …\nQuery the procedure’ state by its id\nCast a <code>ValueRef</code> to u64, returns <code>None</code> if fails\nCreate a function signature with oneof signatures of …\n<code>AggregateFunctionMeta</code> dynamically creates …\nA function creates <code>AggregateFunctionCreator</code>. “Aggregator…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function adds an interval value to Timestamp, Date or …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function that formats timestamp/date/datetime into …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function subtracts an interval value to Timestamp, Date …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTODO: remove the allow_unused when it’s used.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe function to check whether an expression is NULL\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTODO: remove the allow_unused when it’s used.\n<code>RangeFunction</code> will never be used as a normal function, …\ngenerates rates from a sequence of adjacent data points.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>range_fn</code> will never been used. As long as a legal …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe function to find remainders\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ngenerates rates from a sequence of adjacent data points.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nnumpy.clip function, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nsearch the biggest number that smaller than x in xp\nOne-dimensional linear interpolation for monotonically …\nsearch the biggest number that smaller than x in xp\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function to convert the column into the unix timestamp …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a ScalarUdf from function, query context and state.\nShared state for SQL functions. The handlers in state may …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerates build information\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function to return current schema name.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA function to query procedure state by its id. Such as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function to return current session timezone.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTable functions\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister all table functions to <code>FunctionRegistry</code>.\nA function to $display_name\nA function to $display_name\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function to $func table, such as …\nA function to $func table, such as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function to migrate a region from source peer to target …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")