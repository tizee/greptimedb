searchState.loadedDescShard("servers", 0, "The Server running mode\nCached SQL and logical plan for database interfaces\nAdd a gRPC service (<code>service</code>) to a <code>builder</code>(RoutesBuilder). …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nprometheus protocol supportings handles prometheus …\nprom supply the prometheus HTTP API Server compliance\nAll query handler traits for various request protocols, …\nCopied from tokio’s mini-redis example.\nSNAFU context selector for the <code>Error::AlreadyStarted</code> …\nSNAFU context selector for the <code>Error::Arrow</code> variant\nSNAFU context selector for the <code>Error::Auth</code> variant\nSNAFU context selector for the <code>Error::BuildHttpResponse</code> …\nSNAFU context selector for the <code>Error::CatalogError</code> variant\nSNAFU context selector for the <code>Error::CheckDatabaseValidity</code>…\nSNAFU context selector for the <code>Error::CollectRecordbatch</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::ConnResetByPeer</code> …\nSNAFU context selector for the <code>Error::ConvertScalarValue</code> …\nSNAFU context selector for the <code>Error::DataFrame</code> variant\nSNAFU context selector for the <code>Error::DatabaseNotFound</code> …\nSNAFU context selector for the <code>Error::DecodeOtlpRequest</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::DescribeStatement</code> …\nContains the error value\nSNAFU context selector for the <code>Error::ExecuteGrpcQuery</code> …\nSNAFU context selector for the <code>Error::ExecuteGrpcRequest</code> …\nSNAFU context selector for the <code>Error::ExecutePlan</code> variant\nSNAFU context selector for the <code>Error::ExecuteQuery</code> variant\nSNAFU context selector for the <code>Error::ExecuteScript</code> variant\nSNAFU context selector for the <code>Error::FileWatch</code> variant\nSNAFU context selector for the <code>Error::GetPreparedStmtParams</code>…\nSNAFU context selector for the <code>Error::GrpcReflectionService</code>…\nSNAFU context selector for the <code>Error::Hyper</code> variant\nSNAFU context selector for the <code>Error::IncompatibleSchema</code> …\nSNAFU context selector for the <code>Error::InfluxdbLineProtocol</code> …\nSNAFU context selector for the <code>Error::InsertScript</code> variant\nSNAFU context selector for the <code>Error::InternalIo</code> variant\nSNAFU context selector for the <code>Error::Internal</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidAuthHeader</code> …\nSNAFU context selector for the <code>Error::InvalidBase64Value</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidFlightTicket</code> …\nSNAFU context selector for the <code>Error::InvalidFlushArgument</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidOpentsdbLine</code> …\nSNAFU context selector for the <code>Error::InvalidParameter</code> …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::InvalidQuery</code> variant\nSNAFU context selector for the <code>Error::InvalidUtf8Value</code> …\nSNAFU context selector for the <code>Error::JoinTask</code> variant\nSNAFU context selector for the <code>Error::MissingQueryContext</code> …\nSNAFU context selector for the <code>Error::MysqlValueConversion</code> …\nSNAFU context selector for the <code>Error::NotFoundAuthHeader</code> …\nSNAFU context selector for the <code>Error::NotFoundInfluxAuth</code> …\nSNAFU context selector for the <code>Error::NotSupported</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::Other</code> variant\nSNAFU context selector for the <code>Error::OtlpMetricsWrite</code> …\nSNAFU context selector for the <code>Error::ParsePromQL</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::PromSeriesWrite</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::RowWriter</code> variant\nSNAFU context selector for the <code>Error::SendPromRemoteRequest</code>…\nSNAFU context selector for the <code>Error::StartGrpc</code> variant\nSNAFU context selector for the <code>Error::StartHttp</code> variant\nSNAFU context selector for the <code>Error::TcpBind</code> variant\nSNAFU context selector for the <code>Error::TcpIncoming</code> variant\nSNAFU context selector for the <code>Error::TimePrecision</code> variant\nSNAFU context selector for the <code>Error::TimestampOverflow</code> …\nSNAFU context selector for the <code>Error::TlsRequired</code> variant\nSNAFU context selector for the <code>Error::ToJson</code> variant\nSNAFU context selector for the <code>Error::TokioIo</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::UnexpectedResult</code> …\nSNAFU context selector for the <code>Error::UnsupportedAuthScheme</code>…\nSNAFU context selector for the <code>Error::UnsupportedDataType</code> …\nSNAFU context selector for the <code>Error::UpdateJemallocMetrics</code>…\nSNAFU context selector for the <code>Error::UrlDecode</code> variant\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the tonic Code of a StatusCode.\n<code>ToString::to_string</code>, but without panic on OOM.\nUse to export the metrics generated by greptimedb, encoded …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSend metrics collected by our internal handler for case …\nSend metrics collected by standard Prometheus RemoteWrite …\nContains the error value\nGrpc Server configuration\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandler for Greptime Database service. It’s implemented …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrometheusGateway provides a gRPC interface to query …\ngRPC serving state receiver. Only present if the gRPC …\nThis middleware is responsible for authenticating the user …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd handler for DatabaseService service.\nAdd handler for FlightService.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdd handler for OpenTelemetry Protocol (OTLP) requests.\nAdd handler for Prometheus-compatible PromQL queries ([…\nAdd handler for RegionServer.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA subset of FlightService\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHistogram timer for handling gRPC request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new timer.\nConsumes the timer and record the elapsed time with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefault http body limit (64M).\nIt allows the results of SQL queries to be presented in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhandle error middleware\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nprom supply the prometheus HTTP API Server compliance\nprom supply the prometheus HTTP API Server compliance\nRoute Prometheus remote read and write API. In other …\nRoute Prometheus HTTP API.\nAxum Test Client\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAuthState is a holder state for <code>UserProviderRef</code> during …\nInfluxDB v2 uses “bucket” instead of “db” …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandler to expose configuration information info about …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a response from query result\nHandler to export healthy check\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandler to export metrics\nHandler to execute promql\nHandler to execute sql\nHandler to expose information info about runtime, build, …\nHeader key of <code>db-name</code>. Example format of the header value …\nHeader key of query specific timezone. Example format of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a influxdb v1 response from query result\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFor VictoriaMetrics modified remote write protocol\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecify which physical table to use for storing metrics. …\nSame with remote_write but won’t store data to metric …\nSame with remote_write but won’t store data to metric …\nVariants corresponding to ValueType\nFor ValueType::Matrix result type\nFor ValueType::Vector result type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from <code>Result&lt;Output&gt;</code>\nGet all tag column name of the given schema\nTries to get catalog and schema from an optional db param. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert RecordBatches to PromData\nRetrieve labels name from record batches\nRetrieve labels name from query result\nUpdate catalog and schema in QueryContext if necessary.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandler to execute script\nHandler to insert and compile script\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nBuilder for test requests.\nTest client to Axum servers.\nA wrapper around <code>reqwest::Response</code> that provides common …\nReturns the base URL (http://ip:port) for this TestClient\nSet the request body.\nGet the response body as bytes.\nGet the response in chunks.\nGet the response in chunks as text.\nCreate a DELETE request.\nSet the request forms.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a GET request.\nCreate a HEAD request.\nSet a request header.\nGet the response headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the inner <code>reqwest::Response</code> for less convenient but …\nSet the request JSON body.\nGet the response body as JSON.\nSet a request multipart form.\nCreate a new test client.\nCreate a PATCH request.\nCreate a POST request.\nCreate a PUT request.\nGet the response status.\nGet the response body as text.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGrpcQueryInterceptor can track life cycle of a grpc …\nLineProtocolInterceptor can track life cycle of a line …\nOpenTelemetryProtocolInterceptor can track life cycle of …\nPromQueryInterceptor can track life cycle of a prometheus …\nPromStoreProtocolInterceptor can track life cycle of a …\nScriptInterceptor can track life cycle of a script request …\nSqlQueryInterceptor can track life cycle of a sql query …\nCalled after execution finished. The implementation can …\nCalled after execution finished. The implementation can …\nCalled after execution finished. The implementation can …\nCalled after sql is parsed into statements. This …\nCalled before sql is actually executed. This hook is not …\nCalled before request is actually executed.\nCalled before request is actually executed.\nCalled before script request is actually executed.\nCalled before a query string is parsed into sql statements.\nHttp influxdb write duration per database.\nHttp pql query duration per database.\nPrometheus remote write codec duration.\nDuration to convert prometheus write request to gRPC …\nDecode duration of prometheus write request.\nHttp prometheus read duration per database.\nHttp prometheus write duration per database.\nHttp SQL query duration per database.\nA metrics middleware.\nThe samples count of Prometheus remote write.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA middleware to record metrics for HTTP.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\na server that serves metrics only start when datanode …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUse regex to filter out some MySQL federated components’ …\nDescribe the statement\nExecute the logical plan and return the output\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRetrieve the query and logical plan by id\nParameters that the client must provide when executing the …\nSave query and logical plan, return the unique id\nConvert <code>ParamValue</code> into <code>Value</code> according to param type. It …\nReturns the placeholder string “$i”.\nReplace all the “?” placeholder into “$i” in SQL, …\nTransform all the “?” placeholder into “$i”. Only …\n<code>MysqlSpawnConfig</code> stores config values which are used to …\n<code>MysqlSpawnRef</code> stores arc refs that should be passed to new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates MySQL columns definition from our column schema.\nIndicate no more result set to write. No need to call this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry to write one result set. If there are more than one …\nTry to write multiple output to the writer if possible.\nModified from Tokio’s mini-redis example.\nReturns the argument unchanged.\nModified from Tokio’s mini-redis example.\nCalls <code>U::from(self)</code>.\nBroadcasts a shutdown signal to all active connections.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTries to parse a line from the buffer.\nRead one line from the underlying stream.\nPer-connection handler. Reads requests from <code>connection</code> and …\nThe TCP connection decorated with OpenTSDB line protocol …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nListen for shutdown notifications.\nthe default column count for table writer\nencode this gauge metric\nEncode histogram data. This function returns 3 insert …\nencode this sum metric\nNormalize otlp instrumentation, metric and attribute names\nConvert OpenTelemetry metrics to GreptimeDB insert requests\nTransformer helps to transform ExportTraceServiceRequest …\nConvert OpenTelemetry traces to SpanTraces\nConvert SpanTraces to GreptimeDB row insert requests. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nkey to store our parsed catalog\nkey to store our parsed schema\nBuilder for <code>MakePostgresServerHandler</code>.\nError type for MakePostgresServerHandlerBuilder\nUninitialized field\nCustom validation error\nBuilds a new <code>MakePostgresServerHandler</code>.\nCreate an empty builder, with all fields set to <code>None</code> or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function extracted to resolve lifetime and readability …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new Postgres server with provided query_handler …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nBuilder for one table.\nTablesBuilder serves as an intermediate container to build …\nAdds a set of labels and samples to table builder.\nConverts TablesBuilder to RowInsertRequests and row …\nConverts TableBuilder to RowInsertRequest and clears …\nIndices of columns inside <code>schema</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets table builder with given table name. Creates an empty …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTotal number of rows inside table builder.\nRows written.\nColumn schemas.\nMetrics for push gateway protocol\nCollect each row’s timeseries id This processing is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMock timeseries for test, it is both used in servers and …\nCreate a DataFrame from a remote Query\nGet table name from remote query\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a variable-length encoded bytes field from <code>buf</code> and …\nSimilar to <code>Bytes::split_to</code>, but directly operates on …\nA successful request will not return a response. Only on …\nA successful request will not return a response. Only on …\nReturns the argument unchanged.\nHandling push gateway requests\nCalls <code>U::from(self)</code>.\nHandling opentelemetry metrics request\nHandling prometheus remote read requests\nHandling opentelemetry traces request\nHandling prometheus remote write requests\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nanything that can be cleared\nWrapper around vector to avoid deallocations on clear.\nGet data a mutable raw pointer.\nView data as mutable slice.\nGet data as raw pointer.\nView data as slice.\nReturn current capacity.\nClear this make, make it equivalent to newly created …\nClear.\nTrue iff this container contains given element.\nReturns the argument unchanged.\nCopy slice data to <code>RepeatedField</code>\nCopy slice data to <code>RepeatedField</code>\nCreate a contained with data from given vec.\nView all but last elements of this container.\nInsert an element at specified position.\nCalls <code>U::from(self)</code>.\nConvert data into vec.\nReturns true if this container is empty.\nImmutable data iterator.\nMutable data iterator.\nLast element of this container.\nMutable last element of this container.\nReturn number of elements in this container.\nCreate new empty container.\nPop last element.\nPush an element to the end.\nPush default value. This operation could be faster than …\nRemove an element from specified position.\nRetains only the elements specified by the predicate.\nReverse in place.\nGet subslice of this container.\nGet slice from given index.\nGet mutable slice from given index.\nGet mutable subslice of this container.\nGet slice to given index.\nGet mutable slice to given index.\nSort elements with given comparator.\nView this container as two slices split at given index.\nView this container as two mutable slices split at given …\nView all but first elements of this container.\nCopy this data into new vec.\nTruncate at specified length.\nThe intermediate data structure for building the write …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the request and number of rows in it.\nWrite float64 data as a field into the table data.\nWrite data as fields into the table data.\nWrite data as a tag into the table data.\nWrite data as tags into the table data.\nWrite timestamp data as milliseconds into the table data.\nWrite timestamp data as nanoseconds into the table data.\nServerHandlers is used to manage the lifecycle of all the …\nFinds the <strong>actual</strong> bound address of the service by its name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShutdown the server gracefully.\nShutdown all the managed services. It will block until all …\nStarts the server and binds on <code>listening</code>.\nStarts all the managed services. It will block until all …\nListens for the server shutdown signal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the shutdown signal has been received.\nCreate a new <code>Shutdown</code> backed by the given …\nThe receive half of the channel used to listen for …\nReceive the shutdown notice, waiting if necessary.\n<code>true</code> if the shutdown signal has been received\nA mutable container for TLS server config\nTlsMode is used for Mysql and Postgres server start up.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the server config hold by this container\nGet associated <code>TlsOption</code>\nGet version of current config\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReread server certificates and keys from file system.\nCreate server config by loading configuration from …")